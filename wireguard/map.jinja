{% import_yaml slspath+"/defaults.yaml" as defaults %}

{% set wireguard_pillar = salt['pillar.get']('wireguard', default=defaults.wireguard, merge=True) %}

{# Get Mine Data #}
{% set wireguard_external_ips = salt['mine.get']('features:wireguard', 'external_ip', expr_form = 'grain') %}

{# Add Network Defaults #}
{% for network, network_settings in wireguard_pillar['networks'].items() %}
  {% set merged_network=salt['pillar.get']('wireguard:networks:' ~ network, wireguard_pillar.defaults.network, merge=True) %}
  {% do wireguard_pillar['networks'][network].update(merged_network) %}
  {% if network_settings['nodes'] %}
    {% for node, node_setting in network_settings['nodes'].items() %}
      {% set merged_node = salt['pillar.get']('wireguard:networks:' ~ network ~ ':nodes:' ~ node, merged_network.node, merge=True) %}
      {% do wireguard_pillar['networks'][network]['nodes'][node].update(merged_node) %}
      {% if grains['id'] != node and merged_node.get('public_key') != None %}
          {% set endpoint = merged_node.get('endpoint') %}
          {% if endpoint == None and merged_node.get('endpoint_addr') != None %}
            {% set endpoint = merged_node.get('endpoint_addr') + ":" + merged_node.listen_port | string  %}
          {% endif %}
          {% set allowed_ips = merged_node.get('allowed_ips', []) %}
          {% if allowed_ips | length == 0 %}
            {% if merged_node.get('ipv4_address') != None %}
                {% do allowed_ips.append(merged_node.get('ipv4_address')) %}
            {% endif %}
            {% if merged_node.get('ipv6_address') != None %}
                {% do allowed_ips.append(merged_node.get('ipv6_address')) %}
            {% endif %}
          {% endif %}
          {% set merged_peer = {
            'name': node,
            'comment': merged_node.get('comment'),
            'public_key': merged_node.get('public_key'),
            'preshared_key': merged_node.get('preshared_key'),
            'allowed_ips': allowed_ips,
            'endpoint': endpoint,
            'persistent_keepalive': merged_node.get('persistent_keepalive'),
        } %}
        {% do wireguard_pillar['networks'][network]['peers'].update({ node: merged_peer }) %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}

{# Create import pillar #}
{% set wireguard = wireguard_pillar %}

